-- SPDX-License-Identifier: CC0-1.0
-- vim:syntax=lua:set ts=4 sw=4:
-- Refer to manual: https://knot-resolver.readthedocs.org/en/stable/

-- Network interface configuration
net.listen('0.0.0.0', 53, { kind = 'dns' })
net.listen('0.0.0.0', 853, { kind = 'tls' })
net.listen('0.0.0.0', 443, { kind = 'doh' })
net.listen('0.0.0.0', 8453, { kind = 'webmgmt' })
net.listen(net.lo, 53, { kind = 'dns', freebind = true })
net.listen(net.lo, 853, { kind = 'tls', freebind = true })
net.listen(net.lo, 443, { kind = 'doh' })
net.listen(net.lo, 8453, { kind = 'webmgmt' })
--net.listen('::1', 53, { kind = 'dns', freebind = true })
--net.listen('::1', 853, { kind = 'tls', freebind = true })
net.listen('/tmp/kres.control', nil, {kind = 'control' })

-- Uncomment this only if you need to debug problems.
--verbose(true)

-- DNS Flag Day 2020
net.bufsize(1232)

-- Load useful modules
modules = {
	'hints > iterate',  -- Load /etc/hosts and allow custom root hints
	'stats',            -- Track internal statistics
	'predict',          -- Prefetch expiring/frequent records
	'http',
	'prefill',
}

-- Cache size
-- reboot the machine, run `free -m` and use 90% of the value in free as the cache size
-- Example:
--               total        used        free      shared  buff/cache   available
-- Mem:           1826         247         445           8        1134        1398
-- 90% of 445 is 400 (445*0,9=400)
cache.size = 2885 * MB
cache.storage = 'lmdb:///tmp/knot-resolver/'
cache.min_ttl(3600)
cache.max_ttl(86400)

--hints.add_hosts('/etc/knot-resolver/nilpeter_com')


-- Use the urlhaus.abuse.ch RPZ list
policy.add(policy.rpz(policy.DENY, '/etc/knot-resolver/abuse.ch.rpz',true))

-- Define list of internal-only domains
internalDomains = policy.todnames({'nilpeter.com', 'nilpeter.dk'})

-- Forward all queries belonging to domains in the list above to IP address '1.1.1.1'
policy.add(policy.suffix(policy.FLAGS({'NO_CACHE'}), internalDomains))
policy.add(policy.suffix(policy.STUB({'172.16.0.99', '172.16.0.100'}), internalDomains))

-- Forward all queries to public resolvers
policy.add(policy.all(policy.TLS_FORWARD({
		{'1.1.1.3', hostname='cloudflare-dns.com', ca_file = tls_bundle },
		{'1.0.0.3', hostname='cloudflare-dns.com', ca_file = tls_bundle },
})))


-- Define list of blocked domains
blockedDomains = policy.todnames({'briangarst.com', 'howdoesin.net', 'rududulu.com'})

-- Block queries to domains in list above
policy.add(policy.suffix(policy.DENY, blockedDomains))

-- optionally load geoIP database for server map
-- modules.load('http')
http.config({
	tls = true,
	cert = '/etc/knot-resolver/star_nilpeter_com.crt',
	key = '/etc/knot-resolver/star_nilpeter_com.key',
	geoip = 'GeoLite2-City.mmdb',
}, 'doh','webmgmt' )

tls_bundle = '/etc/pki/tls/certs/ca-bundle.crt'


--disable DNSSEC
trust_anchors.remove('.')

-- import root zone data
--prefill.config({
--	['.'] = {
--		url = 'https://www.internic.net/domain/root.zone',
--		interval = 86400,
--		ca_file = tls_bundle,
--	}
--})


-- Prefecth learning
predict.config({
	window = 30, -- 30 minutes sampling window
	period = 24*(60/15) -- track last 24 hours
})
